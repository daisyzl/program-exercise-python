#-*-coding:utf-8-*-
'''
题目描述
有一片1000*1000的草地，小易初始站在(1,1)(最左上角的位置)。小易在每一秒会横向或者纵向移动到相邻的草地上吃草(小易不会走出
边界)。大反派超超想去捕捉可爱的小易，他手里有n个陷阱。第i个陷阱被安置在横坐标为xi ，纵坐标为yi 的位置上，小易一旦走入一
个陷阱，将会被超超捕捉。你为了去解救小易，需要知道小易最少多少秒可能会走入一个陷阱，从而提前解救小易。

输入描述:
第一行为一个整数n(n ≤ 1000)，表示超超一共拥有n个陷阱。
第二行有n个整数xi，表示第i个陷阱的横坐标
第三行有n个整数yi，表示第i个陷阱的纵坐标
保证坐标都在草地范围内。

输出描述:
输出一个整数,表示小易最少可能多少秒就落入超超的陷阱

示例1
输入
3
4 6 8
1 2 1

输出
3

'''
import sys

#注意小易在每一秒会横向或者纵向移动到相邻的草地上吃草
#这个条件很关键

if __name__ == '__main__':
    def solution(a1,a2):
        result_list=[(x+y) for (x,y) in zip(a1,a2)]
        return min(result_list)-2


    data=sys.stdin.readlines()
    #读取输入数据，将每行以列表形式存储
    a1= [int(i) for i in data[1].split()]
    a2= [int(i) for i in data[2].split()]

    print(solution(a1,a2))

'''
zip函数接受任意多个可迭代对象作为参数,将对象中对应的元素打包成一个tuple,然后返回一个可迭代的zip对象.
这个可迭代对象可以使用循环的方式列出其元素
若多个可迭代对象的长度不一致,则所返回的列表与长度最短的可迭代对象相同.
'''