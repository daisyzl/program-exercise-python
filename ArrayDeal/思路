https://shenjie1993.gitbooks.io/leetcode-python/006%20ZigZag%20Conversion.html

https://github.com/luliyucoordinate/Leetcode
所有题的解题思路

数组
1. 加一（迭代）

2. 杨辉三角和杨辉三角2（map） 多练一下

3. 转置矩阵（zip） 可以多看一下

4. 二进制求和（int）

5. 实现strstr（主要是方法二）

6. 最长公共前缀（学习该思想，多练）

7. 翻转字符串II（切片）

8. 最大连续1的个数（连续数的计算） 和 最长连续递增序列  方法类似

9. 长度最小子数组（三种方法需要学习），方法一和方法二暂放

10. 旋转数组（三种方法）包含insert的使用以及切片的使用

11. 翻转字符串的单词（对字符串方法的练习）

12. 移动零（append和extend的区别）

13. 删除排序数组中的重复项 (range的倒序和容易忽视点)和版本II（两个以上数）

14. 分类颜色（计数排序，三路快排没有看）

15. 验证回文串（filter和isalnum），方法二是对撞指针 和 翻转字符串中的元音字母 方法相同  可以多练练

16. 单词模式(两种方法一种常规字典，另一个python思想很好)和同构字符串是一种方法，可以多练练

18. 合并两个有序数组（多练 爱奇艺 归并排序）

19. 存在重复元素（可以先排序后再操作）

20  存在重复元素（三种方法中，后两种方法比较难，可以暂放）

21. 按奇偶排序数组 II(三种方法，对于与奇偶数有关的题开拓思路)

22. 找到所有数组中消失的数字（两种方法，set去重思想，利用数组下标）

23. 三个数的最大乘积（考虑有负数的情况）

二分法
1. x的平方根（主要查看最后返回的值）

2. 搜索旋转排序数组（改良后的二分法思想）

3. 找到 K 个最接近的元素（需要深刻理解二分法）

4. 在排序数组中查找元素的第一个和最后一个位置（二分法的变种）

5. 寻找比目标字母大的最小字母（主要查看最后返回的值）

6. 寻找峰值（主要查看最后返回的值）

7. 搜索插入的位置（主要查看最后返回的值）




