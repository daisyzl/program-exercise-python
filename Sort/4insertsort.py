#-*-coding:utf-8-*-
'''
插入排序
基本思想：插入排序是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，
找到相应位置并插入。插入排序在实现上，在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。

插入排序的时间复杂度问题
最优时间复杂度：O(n) （升序排列，序列已经处于升序状态）
最坏时间复杂度：O(n2)
稳定性：稳定

https://www.runoob.com/python3/python-insertion-sort.html

思想：
把n个待排序的元素看成一个有序表和一个无序表，开始时有序表中只包含一个元素，无序表中包含n-1个元素，
排序过程中每次从无序表中取出第一个元素，把它的排序码依次与有序元素的排序码进行比较，
将它插入到有序表中的适当位置，使之成为新的有序表

插入排序和希尔排序一起记忆

'''

if __name__ == '__main__':
    def insert_sort(data):
        for i in range(1, len(data)):
            # 前一个数已经排序
            key = data[i]
            j = i-1
            # key前面一个数的下标
            # j >= 0 保证给key找插入位置不越界
            # key < data[j] 待插入的位置没有找到
            while(j >= 0 and key < data[j]):
                data[j+1] = data[j]
                # 将前一个数往后移一位
                j -= 1
            # 退出循环，找到位置 key >data[j],放到后面
            data[j+1] = key
        return data



    li = [99, 22, 64, 55, 11, 35, 89, 1, 2]
    print(insert_sort(li))
